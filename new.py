import config
import telebot
from telebot import types  # –∫–Ω–æ–ø–∫–∏
from string import Template

from db import init_db, add_user

bot = telebot.TeleBot(config.token)

users = {}


class Member:
    def __init__(self, chat_id, name, alias):
        self.chat_id = chat_id
        self.name = name
        self.first_name = ''
        self.last_name = ''
        self.alias = alias
        self.is_registered = False
        self.full_name = ''
        self.phone = ''
        self.email = ''
        self.cv_link = ''
        self.step = 0
        self.balance = 0


# /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons_row1 = ['üë©‚Äçüíª –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', '‚ùì –ü–æ–º–æ—â—å']
    buttons_row2 = ['üéØ –ü—Ä–æ–≥—Ä–µ—Å—Å', 'üèÜ –ë–∞–ª–∞–Ω—Å –æ—á–∫–æ–≤']
    buttons_row3 = ['üìÑ –†–µ–∑—é–º–µ', 'üíØ –¢–µ—Å—Ç']
    keyboard.add(*buttons_row1)
    keyboard.add(*buttons_row2)
    keyboard.add(*buttons_row3)

    # TODO –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –ë–î

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, "
                     + message.from_user.first_name
                     + "!\n–Ø RCI –±–æ—Ç ü§ñ \n"
                     + "C –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –∏ –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –±–∞–ª–ª—ã –Ω–∞ –ø—Ä–∏–∑—ã!"
                     + "\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è! "
                     + "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é: üë©‚Äçüíª –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ", reply_markup=keyboard)


@bot.message_handler(content_types=["text"])
def send_help(message):
    cid = message.chat.id
    if message.text == 'üë©‚Äçüíª –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        user_reg(message)
        balance = 0
    if message.text == 'üíØ –¢–µ—Å—Ç':
        bot.send_message(cid, '–û—Ç–≤–µ—Ç—å –Ω–∞ 10 –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å –∏ –ø–æ–ª—É—á–∏ –ø–æ–¥–∞—Ä–∫–∏ü¶æ)' +
                         '\n–¢—ã –≥–æ—Ç–æ–≤(–∞)?')
        markup = types.ReplyKeyboardRemove(selective=False)
        buttons_row = ['–ù–µ—Ç —è –Ω–µ –≥–æ—Ç–æ–≤(–∞) –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç', '–î–∞ —è –≥–æ—Ç–æ–≤(–∞) –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç']
        markup.add(*buttons_row)
    if message.text == '–ù–µ—Ç —è –Ω–µ –≥–æ—Ç–æ–≤(–∞) –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç':
        bot.send_message(cid, '–•–æ—Ä–æ—à–æ, –Ω–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ - –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å)')
    if message.text == '–î–∞ —è –≥–æ—Ç–æ–≤(–∞) –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç':
        ans = 0
        bot.send_message(cid, '–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—Å—Ç—É–ø–∏–º)')
        bot.send_message(cid, '1. –ö–∞–∫ –∑–æ–≤—É—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–∞?')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['–ò–Ω–Ω–∞', '–ü–æ–ª–ª–∏']
        buttons_row2 = ['–ê–π–≥—é–ª—å']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '–ò–Ω–Ω–∞' or message.text == '–ü–æ–ª–ª–∏' or message.text == '–ê–π–≥—é–ª—å':
        if message.text == '–ò–Ω–Ω–∞':
            ans += 1
        bot.send_message(cid, '2. –°–∫–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç–µ ‚Äú–ö–æ—Ç—è—á–∏–π –ò–Ω–Ω–æ–ø–æ–ª–∏—Å‚Äù? ')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['370-390', '440-460']
        buttons_row2 = ['490-510+']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '370-390' or message.text == '440-460' or message.text == '490-510+':
        if message.text == '490-510+':
            ans += 1
        bot.send_message(cid, '3. –ö—Ç–æ –∏–∑ –ø—Ç–∏—Ü –Ω–µ –æ–±–∏—Ç–∞–µ—Ç –≤ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–µ?')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['–ö–æ–Ω–æ–ø–ª—è–Ω–∫–∞', '–õ–∞—Å—Ç–æ—á–∫–∞']
        buttons_row2 = ['–î–ª–∏–Ω–Ω–æ—Ö–≤–æ—Å—Ç–∞—è —Å–∏–Ω–∏—Ü–∞']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '–ö–æ–Ω–æ–ø–ª—è–Ω–∫–∞' or message.text == '–õ–∞—Å—Ç–æ—á–∫–∞' or message.text == '–î–ª–∏–Ω–Ω–æ—Ö–≤–æ—Å—Ç–∞—è —Å–∏–Ω–∏—Ü–∞':
        if message.text == '–î–ª–∏–Ω–Ω–æ—Ö–≤–æ—Å—Ç–∞—è —Å–∏–Ω–∏—Ü–∞':
            ans += 1
        bot.send_message(cid, '2. –°–∫–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç–µ ‚Äú–ö–æ—Ç—è—á–∏–π –ò–Ω–Ω–æ–ø–æ–ª–∏—Å‚Äù? ')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['370-390', '440-460']
        buttons_row2 = ['490-510+']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '370-390' or message.text == '440-460' or message.text == '490-510+':
        if message.text == '490-510+':
            ans += 1
        bot.send_message(cid, '–°–∫–æ–ª—å–∫–æ —É–ª–∏—Ü –≤ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–µ?')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['4', '5']
        buttons_row2 = ['6']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '4' or message.text == '5' or message.text == '6':
        if message.text == '5':
            ans += 1
        bot.send_message(cid, '5. –ö–∞–∫ –∑–æ–≤—É—Ç –º—ç—Ä–∞ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–∞?')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['–†—É—Å–ª–∞–Ω', '–†—É—Å—Ç–µ–º']
        buttons_row2 = ['–†—É—Å—Ç–∞–º']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '–†—É—Å–ª–∞–Ω' or message.text == '–†—É—Å—Ç–µ–º' or message.text == '–†—É—Å—Ç–∞–º':
        if message.text == '–†—É—Å–ª–∞–Ω':
            ans += 1
        bot.send_message(cid, '6. –ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¢–µ—Ö–Ω–æ–ø–∞—Ä–∫–∞ –∏–º. –ê.–°. –ü–æ–ø–æ–≤–∞?')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞', '–ö–∞–º–µ–Ω—å, —Ç—Ä–∞–≤–∞, –¥–µ—Ä–µ–≤–æ']
        buttons_row2 = ['–í–æ–¥–∞, –ó–µ–º–ª—è, –û–≥–æ–Ω—å, –í–æ–∑–¥—É—Ö']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞' or message.text == '–ö–∞–º–µ–Ω—å, —Ç—Ä–∞–≤–∞, –¥–µ—Ä–µ–≤–æ' or message.text == '–í–æ–¥–∞, –ó–µ–º–ª—è, –û–≥–æ–Ω—å, –í–æ–∑–¥—É—Ö':
        if message.text == '–ö–∞–º–µ–Ω—å, —Ç—Ä–∞–≤–∞, –¥–µ—Ä–µ–≤–æ':
            ans += 1
        bot.send_message(cid, '7. –ö–∞–∫ –∑–æ–≤—É—Ç —Å–∞–º—É—é –∑–Ω–∞–º–µ–Ω–∏—Ç—É—é —Å–æ–±–∞–∫—É –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–∞?')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['–ù–æ—Ä–∞', '–ù–æ–¥–∞']
        buttons_row2 = ['Null']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
    if message.text == '–ù–æ—Ä–∞' or message.text == '–ù–æ–¥–∞' or message.text == 'Null':
        if message.text == '–ù–æ—Ä–∞':
            ans += 1
        bot.send_message(cid, '9. –ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–∞—Ä –≤ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–µ?')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons_row1 = ['108', '404']
        buttons_row2 = ['8080']
        keyboard.add(*buttons_row1)
        keyboard.add(*buttons_row2)
        if ans == 9:
            balance += 10
            bot.send_message('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! –ó–∞ —ç—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –µ—â—ë 10 –±–∞–ª–ª–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å!'
                             ' –¢–µ–ø–µ—Ä—å –æ–Ω —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç '+ balance + ' –±–∞–ª–ª–æ–≤')
        else:
            balance += 5
            bot.send_message('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ ' + ans + ' –≤–æ–ø—Ä–æ—Å–æ–≤! –ó–∞ —ç—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –µ—â–µ 5 –±–∞–ª–ª–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å!'
                             ' –¢–µ–ø–µ—Ä—å –æ–Ω —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ' + balance + ' –±–∞–ª–ª–æ–≤')

@bot.message_handler(commands=['help'])
def send_about(message):
    bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ")


# /reg
@bot.message_handler(commands=["registration"])
def user_reg(message):
    try:
        chat_id = message.chat.id
        name = message.from_user.first_name
        alias = message.from_user.username
        if not alias:
            alias = ''
        users[chat_id] = Member(chat_id, name, alias)

        # —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup = types.ReplyKeyboardRemove(selective=False)

        msg = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è', reply_markup=markup)
        bot.register_next_step_handler(msg, process_last_name_step)

    except Exception as e:
        print(e)
        bot.reply_to(message, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É')


def process_last_name_step(message):
    try:
        chat_id = message.chat.id
        user = users[chat_id]
        user.first_name = message.text

        msg = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é')
        bot.register_next_step_handler(msg, process_full_name_step)

    except Exception as e:
        print(e)
        bot.reply_to(message, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É')


def process_full_name_step(message):
    try:
        chat_id = message.chat.id
        user = users[chat_id]
        user.last_name = message.text

        msg = bot.send_message(chat_id, '–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
        bot.register_next_step_handler(msg, process_phone_step)

    except Exception as e:
        print(e)
        bot.reply_to(message, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É')


def process_phone_step(message):
    try:
        int(message.text)

        chat_id = message.chat.id
        user = users[chat_id]
        user.phone = message.text

        msg = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ email')
        bot.register_next_step_handler(msg, process_email_step)

    except Exception as e:
        print(e)
        msg = bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ —Ç–æ –¥—Ä—É–≥–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.')
        bot.register_next_step_handler(msg, process_phone_step)


def process_email_step(message):
    try:
        chat_id = message.chat.id
        user = users[chat_id]
        user.email = message.text
        user.is_registered = True

        add_user(cid=user.chat_id,
                 first_name=user.first_name,
                 last_name=user.last_name,
                 alias=user.alias,
                 phone=user.phone,
                 email=user.email
                 )

        # –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        bot.send_message(chat_id, getRegData(user, '–°–ø–∞—Å–∏–±–æ =) –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞!', message.from_user.first_name),
                         parse_mode="Markdown")
        # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É
        bot.send_message(config.chat_id, getRegData(user, '–ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ', bot.get_me().username),
                         parse_mode="Markdown")

    except Exception as e:
        print(e)
        msg = bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ —Ç–æ –¥—Ä—É–≥–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ email.')
        bot.register_next_step_handler(msg, process_phone_step)


# —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –≤–∏–¥ –∑–∞—è–≤–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
# –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ Template
# –≤ send_message –¥–æ–ª–∂–Ω–æ —Å—Ç–æ—è—Ç—å parse_mode="Markdown"
def getRegData(user, title, name):
    t = Template(
        '$title *$name* \n –§–ò–û: *$fullname* \n –¢–µ–ª–µ—Ñ–æ–Ω: *$phone* \n Email: *$email* \n Telegram: @*$alias* #*$alias*')

    if user.alias == '':
        alias = user.name
    else:
        alias = user.alias

    return t.substitute({
        'title': title,
        'name': name,
        'fullname': user.full_name,
        'phone': user.phone,
        'email': user.email,
        'alias': alias
    })


# –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
@bot.message_handler(content_types=["text"])
def send_help(message):
    bot.send_message(message.chat.id, '–ü–æ–º–æ—â—å')


# –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=["photo"])
def send_help_text(message):
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç')


def main():
    init_db()
    bot.polling(none_stop=True)


if __name__ == '__main__':
    main()
